FOR FUEL CALCULATION
fuel_id - integer - auto_increment - - primary key
user_id - integer - auto_increment - foreign key
vehicle_id - integer - auto_increment - foreign key (a user may have multiple vehicles)
fuel type - enum - ('petrol','diesel','LPG','CNG')
price - integer - in rupees per litre(petrol/diesel) or rupees per kg(for LPG & CNG)
total - integer - in rupees
quantity - integer - in litres(petrol/diesel) or per kg(for LPG & CNG) (total/price)
date - timestamp - date of filling fuel
kilometres - integer - kilometres reading at the point of time of filling fuel
avg_kms - integer - (say 35 km per litre) kms done/quantity
avg_rs - integer - (say 3rs per kms)=> total(spend in rupees)/kms done

eg:
stale reading - 7000kms(first reading) - after that previous reading from fuel table for subsequent calculations
1 1 3 petrol 71.43 1000 1000/71.43(integral value-upto 3 figures) timestamp 7740 (7740-7000)740/quantity total/740


FOR USERS' VEHICLE THAT HE REGISTERS WITH US(for registration-second tab)
vehicle_id - integer - auto_increment - primary key
user_id - integer - auto_increment - foreign key
vehicle_type - varchar/enum('car','motorcycle')
brand - varchar(50) - brand of vehicle(say honda) - in UI we can provide a dropdown list
model - varchar(50) - say Amaze
Variant - varchar(20) - say 3rd model (called S in honda) - optional(can be null)
fuel type - enum - ('petrol','diesel','LPG','CNG') - fuel the car uses - can be foreign key from above table
purchase_year - varchar (20) - say june 2013 - optional(can be null)
kms_first - int - this is the stale reading - this is the reading when he fills up his tank for the first time(7000) - from second reading (7740) entry starts  in fuel table
date - timestamp - date for registering vehicle with us

FOR USERS DETAIL(for registration-first tab)
user_id - integer - auto_increment - primary key
name - varchar(100) - name of registrant
email - varchar(100) - users email
phone - varchar(11) - optional(can be null)
state - varchar(20)- users area of living - utttar pradesh
city - varchar(20) - noida
locality - varchar(20) - sec-11 - optional (can be null)


Main issue here is shall we get fuel price from user or shall we daily scan and update all prices
right now the DB structure has prices in fuel table only
It is possible that i live in UP but i buy fuel from Delhi as it is cheaper; many ppl might be doing that
